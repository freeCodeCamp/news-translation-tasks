name: Format PR Files

on:
  pull_request:
    types:
      - opened
    paths:
      - '**/*.md'  # Trigger workflow only when .md files are modified in the PR

jobs:
  whitespace:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git config
        run: |
          git config --global user.name "miyaliu666"
          git config --global user.email "miyaliu@gmail.com"

      - name: Add upstream remote
        run: |
          # Add the upstream remote using the repository URL and the authorâ€™s username
          git remote add upstream https://github.com/${{ github.event.pull_request.base.user.login }}/${{ github.event.pull_request.base.repo.name }}.git
          
      - name: Fetch all branches from upstream
        run: |
          # Fetch all branches from both origin and upstream
          git fetch origin
          git fetch upstream

      - name: Remove trailing whitespaces from Markdown files
        run: |
          echo "Target branch: ${{ github.event.pull_request.base.ref }}"
          echo "Head branch: ${{ github.event.pull_request.head.ref }}"

          base_branch="${{ github.event.pull_request.base.ref }}"
          head_branch="${{ github.event.pull_request.head.ref }}"

          # Fetch all remote branches
          git fetch origin

          base_commit=$(git merge-base origin/$base_branch origin/$head_branch)
          echo "Base commit: $base_commit"
          
          files=$(git diff --name-only $base_commit origin/$head_branch)
          echo "Changed files: $files"

          file=$(echo "$files" | grep '\.md$')
          echo "Filtered .md file: $file"

          if [ -n "$file" ]; then
            echo "Processing file: $file"
            # Remove trailing spaces from each line in the file
            sed -i 's/ $//g' "$file"
            
            # Ensure you're checking out the correct remote tracking branch
            git checkout --track origin/$head_branch || git checkout -b $head_branch  # If $head_branch does not exist, create it

            # Pull the latest changes from the origin remote, use rebase or merge strategy
            git pull origin $head_branch --rebase  # Using rebase to avoid merge commits

            # Commit and push the changes to the PR's source branch
            git add "$file"
            git commit -m "Remove trailing spaces from $file"
            git push origin $head_branch
          else
            echo "No .md files found or no changes to commit."
          fi
