on:
  pull_request:
    types: [opened]
name: Move Project Cards on Opening Pull Request

jobs:
  get_card:
    # Find the GitHub project information from the pull request
    name: Get project card info
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      issues: read
    # outputs:
    #   target_status: ${{ steps.command_check.outputs.target_status }} # Which status to move the card to
    #   card_id: ${{ steps.get_card.outputs.card_id }}
    #   project_url: ${{ steps.get_card.outputs.project_url }}
    #   project_name: ${{ steps.get_card.outputs.project_name }}
    steps:
      - name: Log pull request event data
        uses: actions/github-script@v7
        with:
          script: |
            console.log("*****");
            console.log("github.event:", JSON.stringify(github.event, null, 2));
            console.log("github.event:", JSON.stringify(github.event.pull_request, null, 2));
            console.log("github.event:", JSON.stringify(github.event.issue, null, 2));
      # - name: Get project card
      #   id: get_card
      #   uses: actions/github-script@v7
      #   env:
      #     PR_NODE_ID: ${{ github.event.pull_request.node_id }}
      #     ISSUE_NODE_ID: ${{ github.event.issue.node_id }}
      #   with:
      #     script: |
      #       const query = `
      #       query ($id: ID!) {
      #         node(id: $id) {
      #           ... on Issue {
      #             projectsV2(first: 1) {
      #               edges {
      #                 node {
      #                   id
      #                   url
      #                   title
      #                   items(first: 100) {
      #                     edges {
      #                       node {
      #                         id
      #                         content {
      #                           ... on Issue {
      #                             id
      #                           }
      #                         }
      #                       }
      #                     }
      #                   }
      #                 }
      #               }
      #             }
      #           }
      #         }
      #       }
      #       `;
      #       const variables = {
      #         id: process.env.ISSUE_NODE_ID
      #       };
      #       const result = await github.graphql(query, variables);
      #       console.log(`Result: ${JSON.stringify(result)}`);

      #       const cardId = result.node.projectsV2.edges[0].node.items.edges.find(edge => edge.node.content.id === process.env.ISSUE_NODE_ID).node.id;
      #       const projectUrl = result.node.projectsV2.edges[0].node.url;
      #       const projectName = result.node.projectsV2.edges[0].node.title;

      #       console.log(`Card ID: ${cardId}`);
      #       console.log(`Project URL: ${projectUrl}`);
      #       console.log(`Project Name: ${projectName}`);

      #       core.setOutput('card_id', cardId);
      #       core.setOutput('project_url', projectUrl);
      #       core.setOutput('project_name', projectName);
      #     github-token: ${{ secrets.MOVE_CARDS_TOKEN }}

  # assign_issue:
  #   name: Assign issue and update project card
  #   needs: validate_and_get_card
  #   runs-on: ubuntu-latest
  #   permissions:
  #     issues: write
  #   steps:
  #     - name: Checkout # Checkout the scripts in this repo onto the runner
  #       if: needs.validate_and_get_card.outputs.valid_command == 'true'
  #       uses: actions/checkout@v3
  #     - name: Assign issue to the commenter as translator
  #       id: assign_translator
  #       if: needs.validate_and_get_card.outputs.valid_command == 'true' && needs.validate_and_get_card.outputs.command == 'translate'
  #       uses: actions/github-script@v7
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         script: |
  #           const script = require('./scripts/assignTranslator.js');
  #           await script({github, context, core});
  #     - name: Update project card status
  #       if: steps.assign_translator.outcome == 'success' || steps.assign_reviewer.outcome == 'success'
  #       uses: titoportas/update-project-fields@v0.1.0
  #       with:
  #         project-url: ${{ needs.validate_and_get_card.outputs.project_url }}
  #         github-token: ${{ secrets.MOVE_CARDS_TOKEN }}
  #         item-id: ${{ needs.validate_and_get_card.outputs.card_id }}
  #         field-keys: Status
  #         field-values: ${{ needs.validate_and_get_card.outputs.target_status }}
