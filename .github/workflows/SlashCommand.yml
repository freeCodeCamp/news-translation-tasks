on:
  issue_comment:
    types: [created]
name: Handle Issue Commands
jobs:
  validate_command:
    name: Validate command
    runs-on: ubuntu-latest
    permissions:
      issues: read
    if: |
      !github.event.issue.pull_request && startsWith(github.event.comment.body, '/')
    outputs:
      valid_command: ${{ steps.command_check.outputs.valid_command }}
      command: ${{ steps.command_check.outputs.command }}
    steps:
      - name: Validate command
        id: command_check
        env:
          COMMENT: ${{ github.event.comment.body }}
        run: |
          if [[ "$COMMENT" == /translate* ]]; then
            echo "::set-output name=command::translate"
            echo "::set-output name=valid_command::true"
          elif [[ "$COMMENT" == /review* ]]; then
            echo "::set-output name=command::review"
            echo "::set-output name=valid_command::true"
          elif [[ "$COMMENT" == /proofread* ]]; then
            echo "::set-output name=command::proofread"
            echo "::set-output name=valid_command::true"
          else
            echo "::warning::Invalid command. The comment must start with /translate, /review, or /proofread."
            echo "::set-output name=valid_command::false"
          fi

  assign_issue:
    name: Assign issue
    needs: validate_command
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Add comment for invalid command
        if: needs.validate_command.outputs.valid_command != 'true'
        uses: actions/github-script@v7
        env:
          USER_LOGIN: ${{ github.event.comment.user.login }}
        with:
          script: |
            const issueComment = `
            @${process.env.USER_LOGIN} The command was invalid. The comment must start with /translate, /review, or /proofread.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueComment
            });
          github-token: ${{ secrets.ACTION_GITHUB_TOKEN }}
      - name: Checkout
        if: needs.validate_command.outputs.valid_command == 'true'
        uses: actions/checkout@v3
      - name: Assign issue to the commenter as translator
        id: assign_translator
        if: needs.validate_command.outputs.valid_command == 'true' && needs.validate_command.outputs.command == 'translate'
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
        with:
          script: |
            const script = require('./scripts/assignTranslator.js');
            await script({github, context, core});
      - name: Assign issue to the reviewer
        id: assign_reviewer
        if: needs.validate_command.outputs.valid_command == 'true' && needs.validate_command.outputs.command == 'review'
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
        with:
          script: |
            const script = require('./scripts/assignReviewer.js');
            await script({github, context, core});
      - name: Assign issue to the proofreader
        id: assign_proofreader
        if: needs.validate_command.outputs.valid_command == 'true' && needs.validate_command.outputs.command == 'proofread'
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
        with:
          script: |
            const script = require('./scripts/assignProofreader.js');
            await script({github, context, core});
